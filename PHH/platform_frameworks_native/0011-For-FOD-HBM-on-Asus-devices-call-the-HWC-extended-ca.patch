From 76d4303fc4731a43bb6caeea1dca69fbfa24c3b8 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Sun, 19 Dec 2021 17:04:51 -0500
Subject: [PATCH 11/13] For FOD/HBM on Asus devices, call the HWC extended call
 setLayerClass

Change-Id: Id8773fc3d2fb6d2bd228503b1ee0d77864b2eb05
---
 .../CompositionEngine/src/OutputLayer.cpp              |  5 ++++-
 .../surfaceflinger/DisplayHardware/ComposerHal.cpp     |  7 +++++++
 services/surfaceflinger/DisplayHardware/ComposerHal.h  |  4 ++++
 services/surfaceflinger/DisplayHardware/HWC2.cpp       | 10 ++++++++++
 services/surfaceflinger/DisplayHardware/HWC2.h         |  4 ++++
 5 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp b/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
index 480dc53..f454e44 100644
--- a/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
+++ b/services/surfaceflinger/CompositionEngine/src/OutputLayer.cpp
@@ -429,6 +429,8 @@ void OutputLayer::writeOutputDependentGeometryStateToHWC(HWC2::Layer* hwcLayer,
             z = 0x41000031;
         } else if(sXiaomiFod) {
             z |= 0x1000000;
+        } else if(sAsusFod) {
+            hwcLayer->setLayerClass(4);
         }
     }
 
@@ -438,8 +440,9 @@ void OutputLayer::writeOutputDependentGeometryStateToHWC(HWC2::Layer* hwcLayer,
             z = 0x41000033;
         } else if(sXiaomiFod) {
             z |= 0x2000000;
+        } else if(sAsusFod) {
+            hwcLayer->setLayerClass(5);
         }
-
     }
 
     uint32_t z_udfps = z;
diff --git a/services/surfaceflinger/DisplayHardware/ComposerHal.cpp b/services/surfaceflinger/DisplayHardware/ComposerHal.cpp
index caf0294..ff5039f 100644
--- a/services/surfaceflinger/DisplayHardware/ComposerHal.cpp
+++ b/services/surfaceflinger/DisplayHardware/ComposerHal.cpp
@@ -1220,6 +1220,13 @@ V2_4::Error Composer::setLayerGenericMetadata(Display display, Layer layer, cons
     return Error::NONE;
 }
 
+Error Composer::setLayerClass(Display display, Layer layer, uint32_t layerClass) {
+    mWriter.selectDisplay(display);
+    mWriter.selectLayer(layer);
+    mWriter.vendor800_1(layerClass);
+    return Error::NONE;
+}
+
 V2_4::Error Composer::getLayerGenericMetadataKeys(
         std::vector<IComposerClient::LayerGenericMetadataKey>* outKeys) {
     using Error = V2_4::Error;
diff --git a/services/surfaceflinger/DisplayHardware/ComposerHal.h b/services/surfaceflinger/DisplayHardware/ComposerHal.h
index b525e63..7f978ec 100644
--- a/services/surfaceflinger/DisplayHardware/ComposerHal.h
+++ b/services/surfaceflinger/DisplayHardware/ComposerHal.h
@@ -231,6 +231,8 @@ public:
             std::vector<IComposerClient::LayerGenericMetadataKey>* outKeys) = 0;
     virtual Error getClientTargetProperty(
             Display display, IComposerClient::ClientTargetProperty* outClientTargetProperty) = 0;
+    // Asus proprietary
+    virtual Error setLayerClass(Display display, Layer layer, uint32_t layerClass);
 };
 
 namespace impl {
@@ -470,6 +472,8 @@ public:
     Error getClientTargetProperty(
             Display display,
             IComposerClient::ClientTargetProperty* outClientTargetProperty) override;
+    // Asus proprietary
+    Error setLayerClass(Display display, Layer layer, uint32_t layerClass);
 
 private:
     class CommandWriter : public CommandWriterBase {
diff --git a/services/surfaceflinger/DisplayHardware/HWC2.cpp b/services/surfaceflinger/DisplayHardware/HWC2.cpp
index 27146ab..474c3ea 100644
--- a/services/surfaceflinger/DisplayHardware/HWC2.cpp
+++ b/services/surfaceflinger/DisplayHardware/HWC2.cpp
@@ -872,6 +872,16 @@ Error Layer::setZOrder(uint32_t z)
     return static_cast<Error>(intError);
 }
 
+Error Layer::setLayerClass(uint32_t val)
+{
+    if (CC_UNLIKELY(!mDisplay)) {
+        return Error::BAD_DISPLAY;
+    }
+
+    auto intError = mComposer.setLayerClass(mDisplay->getId(), mId, val);
+    return static_cast<Error>(intError);
+}
+
 // Composer HAL 2.3
 Error Layer::setColorTransform(const android::mat4& matrix) {
     if (CC_UNLIKELY(!mDisplay)) {
diff --git a/services/surfaceflinger/DisplayHardware/HWC2.h b/services/surfaceflinger/DisplayHardware/HWC2.h
index 871465d..7a04047 100644
--- a/services/surfaceflinger/DisplayHardware/HWC2.h
+++ b/services/surfaceflinger/DisplayHardware/HWC2.h
@@ -287,6 +287,8 @@ public:
     // Composer HAL 2.4
     [[clang::warn_unused_result]] virtual hal::Error setLayerGenericMetadata(
             const std::string& name, bool mandatory, const std::vector<uint8_t>& value) = 0;
+
+    virtual hal::Error setLayerClass(uint32_t layerClass) = 0;
 };
 
 namespace impl {
@@ -330,6 +332,8 @@ public:
     hal::Error setLayerGenericMetadata(const std::string& name, bool mandatory,
                                        const std::vector<uint8_t>& value) override;
 
+    hal::Error setLayerClass(uint32_t layerClass);
+
 private:
     // These are references to data owned by HWC2::Device, which will outlive
     // this HWC2::Layer, so these references are guaranteed to be valid for
-- 
2.34.1

